# AUTOGENERATED BY build.py - DO NOT EDIT
country_decisions = {
	upgrade_to_fort_16th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = fort_16th
				has_building = fort_16th
			}
		}
		allow = {
			any_owned_province = {
				can_build = fort_16th
				has_building = fort_16th
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = fort_16th
					has_building = fort_16th
					owner = { treasury = 200 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = fort_16th }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_naval_battery = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = naval_battery
				has_building = naval_battery
			}
		}
		allow = {
			any_owned_province = {
				can_build = naval_battery
				has_building = naval_battery
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = naval_battery
					has_building = naval_battery
					owner = { treasury = 100 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = naval_battery }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_cathedral = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = cathedral
				has_building = cathedral
			}
		}
		allow = {
			any_owned_province = {
				can_build = cathedral
				has_building = cathedral
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = cathedral
					has_building = cathedral
					owner = { treasury = 200 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = cathedral }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_trade_depot = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = trade_depot
				has_building = trade_depot
			}
		}
		allow = {
			any_owned_province = {
				can_build = trade_depot
				has_building = trade_depot
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = trade_depot
					has_building = trade_depot
					owner = { treasury = 200 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = trade_depot }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_grand_shipyard = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = grand_shipyard
				has_building = grand_shipyard
			}
		}
		allow = {
			any_owned_province = {
				can_build = grand_shipyard
				has_building = grand_shipyard
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = grand_shipyard
					has_building = grand_shipyard
					owner = { treasury = 200 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = grand_shipyard }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_training_fields = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = training_fields
				has_building = training_fields
			}
		}
		allow = {
			any_owned_province = {
				can_build = training_fields
				has_building = training_fields
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = training_fields
					has_building = training_fields
					owner = { treasury = 200 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = training_fields }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_fort_17th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = fort_17th
				OR = { has_building = fort_15th has_building = fort_16th }
			}
		}
		allow = {
			any_owned_province = {
				can_build = fort_17th
				OR = { has_building = fort_15th has_building = fort_16th }
			}
			treasury = 400 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = fort_17th
					OR = { has_building = fort_15th has_building = fort_16th }
					owner = { treasury = 400 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = fort_17th }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_stock_exchange = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = stock_exchange
				OR = { has_building = marketplace has_building = trade_depot }
			}
		}
		allow = {
			any_owned_province = {
				can_build = stock_exchange
				OR = { has_building = marketplace has_building = trade_depot }
			}
			treasury = 300 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = stock_exchange
					OR = { has_building = marketplace has_building = trade_depot }
					owner = { treasury = 300 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = stock_exchange }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_counting_house = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = counting_house
				has_building = counting_house
			}
		}
		allow = {
			any_owned_province = {
				can_build = counting_house
				has_building = counting_house
			}
			treasury = 300 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = counting_house
					has_building = counting_house
					owner = { treasury = 300 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = counting_house }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_town_hall = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = town_hall
				has_building = town_hall
			}
		}
		allow = {
			any_owned_province = {
				can_build = town_hall
				has_building = town_hall
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = town_hall
					has_building = town_hall
					owner = { treasury = 100 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = town_hall }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_drydock = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = drydock
				has_building = drydock
			}
		}
		allow = {
			any_owned_province = {
				can_build = drydock
				has_building = drydock
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = drydock
					has_building = drydock
					owner = { treasury = 200 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = drydock }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_conscription_center = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = conscription_center
				has_building = conscription_center
			}
		}
		allow = {
			any_owned_province = {
				can_build = conscription_center
				has_building = conscription_center
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = conscription_center
					has_building = conscription_center
					owner = { treasury = 200 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = conscription_center }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_fort_18th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = fort_18th
				OR = { has_building = fort_15th has_building = fort_16th has_building = fort_17th }
			}
		}
		allow = {
			any_owned_province = {
				can_build = fort_18th
				OR = { has_building = fort_15th has_building = fort_16th has_building = fort_17th }
			}
			treasury = 600 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			every_owned_province = {
				limit = {
					can_build = fort_18th
					OR = { has_building = fort_15th has_building = fort_16th has_building = fort_17th }
					owner = { treasury = 600 } # Once you no longer have the base price, stop building.
				}
				add_building_construction = { building = fort_18th }
				save_event_target_as = last_built_province
			}
			# If it took you into the red...
			if = {
				limit = { NOT = { treasury = 0 } }
				# ... cancel the last one built.
				# This isn't perfect - I would much rather the number in both "allow" and "limit" were
				# affected by actual cost modifications - but at least you won't go into debt for this.
				event_target:last_built_province = { cancel_construction = yes }
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

}

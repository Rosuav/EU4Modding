# AUTOGENERATED BY build.py - DO NOT EDIT
country_decisions = {
	# This is pushing the definition of 'upgrade' a bit, but if you have the ability
	# to establish Siberian Frontiers, you can... upgrade uncolonized provinces to
	# frontiers?? This doesn't actually do the upgrade though, it only points it out.
	upgrade_province_to_frontier = {
		color = { 32 128 32 }
		potential = {
			ai = no
			# Note that this looks really ugly in the hover text (you have to
			# have at least +100% May Establish Siberian Frontiers), but it's
			# best in the Potential section anyway - if you don't have the
			# ability, the decision isn't very relevant.
			has_global_modifier_value = {
				which = may_establish_frontier
				value = 1
			}
		}
		allow = {
			any_owned_province = {
				is_city = yes
				is_in_capital_area = yes
				has_empty_adjacent_province = yes
			}
			# Is there any way to trigger on "can pay this price"? If you have discounts,
			# the decision won't trigger till you have the full 20 - not that it makes a
			# LOT of difference, but still.
			dip_power = 20
		}
		provinces_to_highlight = {
			owned_by = ROOT
			is_city = yes
			is_in_capital_area = yes
			has_empty_adjacent_province = yes
		}
	}
	upgrade_to_courthouse = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = courthouse NOT = { can_build = town_hall }
				
			}
		}
		allow = {
			any_owned_province = {
				can_build = courthouse NOT = { can_build = town_hall }
				
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_courthouse_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = courthouse NOT = { can_build = town_hall }
						
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = courthouse }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_fort_16th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = fort_16th NOT = { can_build = fort_17th }
				OR = { is_expanding_infrastructure = { BUILDING = fort_16th } has_building = fort_15th }
			}
		}
		allow = {
			any_owned_province = {
				can_build = fort_16th NOT = { can_build = fort_17th }
				OR = { is_expanding_infrastructure = { BUILDING = fort_16th } has_building = fort_15th }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_fort_16th_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = fort_16th NOT = { can_build = fort_17th }
						OR = { is_expanding_infrastructure = { BUILDING = fort_16th } has_building = fort_15th }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = fort_16th }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_naval_battery = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = naval_battery
				OR = { is_expanding_infrastructure = { BUILDING = naval_battery } has_building = coastal_defence }
			}
		}
		allow = {
			any_owned_province = {
				can_build = naval_battery
				OR = { is_expanding_infrastructure = { BUILDING = naval_battery } has_building = coastal_defence }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_naval_battery_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = naval_battery
						OR = { is_expanding_infrastructure = { BUILDING = naval_battery } has_building = coastal_defence }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = naval_battery }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_cathedral = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = cathedral
				OR = { is_expanding_infrastructure = { BUILDING = cathedral } has_building = temple }
			}
		}
		allow = {
			any_owned_province = {
				can_build = cathedral
				OR = { is_expanding_infrastructure = { BUILDING = cathedral } has_building = temple }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_cathedral_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = cathedral
						OR = { is_expanding_infrastructure = { BUILDING = cathedral } has_building = temple }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = cathedral }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_university = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = university
				
			}
		}
		allow = {
			any_owned_province = {
				can_build = university
				
			}
			treasury = 300 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_university_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = university
						
						owner = { treasury = 300 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = university }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_trade_depot = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = trade_depot NOT = { can_build = stock_exchange }
				OR = { is_expanding_infrastructure = { BUILDING = trade_depot } has_building = marketplace }
			}
		}
		allow = {
			any_owned_province = {
				can_build = trade_depot NOT = { can_build = stock_exchange }
				OR = { is_expanding_infrastructure = { BUILDING = trade_depot } has_building = marketplace }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_trade_depot_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = trade_depot NOT = { can_build = stock_exchange }
						OR = { is_expanding_infrastructure = { BUILDING = trade_depot } has_building = marketplace }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = trade_depot }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_grand_shipyard = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = grand_shipyard
				OR = { is_expanding_infrastructure = { BUILDING = grand_shipyard } has_building = shipyard }
			}
		}
		allow = {
			any_owned_province = {
				can_build = grand_shipyard
				OR = { is_expanding_infrastructure = { BUILDING = grand_shipyard } has_building = shipyard }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_grand_shipyard_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = grand_shipyard
						OR = { is_expanding_infrastructure = { BUILDING = grand_shipyard } has_building = shipyard }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = grand_shipyard }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_training_fields = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = training_fields
				OR = { is_expanding_infrastructure = { BUILDING = training_fields } has_building = barracks }
			}
		}
		allow = {
			any_owned_province = {
				can_build = training_fields
				OR = { is_expanding_infrastructure = { BUILDING = training_fields } has_building = barracks }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_training_fields_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = training_fields
						OR = { is_expanding_infrastructure = { BUILDING = training_fields } has_building = barracks }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = training_fields }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_fort_17th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = fort_17th NOT = { can_build = fort_18th }
				OR = { is_expanding_infrastructure = { BUILDING = fort_17th } has_building = fort_15th has_building = fort_16th }
			}
		}
		allow = {
			any_owned_province = {
				can_build = fort_17th NOT = { can_build = fort_18th }
				OR = { is_expanding_infrastructure = { BUILDING = fort_17th } has_building = fort_15th has_building = fort_16th }
			}
			treasury = 400 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_fort_17th_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = fort_17th NOT = { can_build = fort_18th }
						OR = { is_expanding_infrastructure = { BUILDING = fort_17th } has_building = fort_15th has_building = fort_16th }
						owner = { treasury = 400 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = fort_17th }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_stock_exchange = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = stock_exchange
				OR = { is_expanding_infrastructure = { BUILDING = stock_exchange } has_building = marketplace has_building = trade_depot }
			}
		}
		allow = {
			any_owned_province = {
				can_build = stock_exchange
				OR = { is_expanding_infrastructure = { BUILDING = stock_exchange } has_building = marketplace has_building = trade_depot }
			}
			treasury = 300 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_stock_exchange_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = stock_exchange
						OR = { is_expanding_infrastructure = { BUILDING = stock_exchange } has_building = marketplace has_building = trade_depot }
						owner = { treasury = 300 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = stock_exchange }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_counting_house = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = counting_house
				OR = { is_expanding_infrastructure = { BUILDING = counting_house } has_building = workshop }
			}
		}
		allow = {
			any_owned_province = {
				can_build = counting_house
				OR = { is_expanding_infrastructure = { BUILDING = counting_house } has_building = workshop }
			}
			treasury = 300 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_counting_house_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = counting_house
						OR = { is_expanding_infrastructure = { BUILDING = counting_house } has_building = workshop }
						owner = { treasury = 300 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = counting_house }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_town_hall = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = town_hall
				
			}
		}
		allow = {
			any_owned_province = {
				can_build = town_hall
				
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_town_hall_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = town_hall
						
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = town_hall }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_drydock = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = drydock
				OR = { is_expanding_infrastructure = { BUILDING = drydock } has_building = dock }
			}
		}
		allow = {
			any_owned_province = {
				can_build = drydock
				OR = { is_expanding_infrastructure = { BUILDING = drydock } has_building = dock }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_drydock_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = drydock
						OR = { is_expanding_infrastructure = { BUILDING = drydock } has_building = dock }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = drydock }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_conscription_center = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = conscription_center
				OR = { is_expanding_infrastructure = { BUILDING = conscription_center } has_building = regimental_camp }
			}
		}
		allow = {
			any_owned_province = {
				can_build = conscription_center
				OR = { is_expanding_infrastructure = { BUILDING = conscription_center } has_building = regimental_camp }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_conscription_center_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = conscription_center
						OR = { is_expanding_infrastructure = { BUILDING = conscription_center } has_building = regimental_camp }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = conscription_center }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_fort_18th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = fort_18th
				OR = { is_expanding_infrastructure = { BUILDING = fort_18th } has_building = fort_15th has_building = fort_16th has_building = fort_17th }
			}
		}
		allow = {
			any_owned_province = {
				can_build = fort_18th
				OR = { is_expanding_infrastructure = { BUILDING = fort_18th } has_building = fort_15th has_building = fort_16th has_building = fort_17th }
			}
			treasury = 600 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_fort_18th_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = fort_18th
						OR = { is_expanding_infrastructure = { BUILDING = fort_18th } has_building = fort_15th has_building = fort_16th has_building = fort_17th }
						owner = { treasury = 600 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = fort_18th }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_marketplace = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = marketplace NOT = { can_build = trade_depot }
				is_expanding_infrastructure = { BUILDING = marketplace }
			}
		}
		allow = {
			any_owned_province = {
				can_build = marketplace NOT = { can_build = trade_depot }
				is_expanding_infrastructure = { BUILDING = marketplace }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_marketplace_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = marketplace NOT = { can_build = trade_depot }
						is_expanding_infrastructure = { BUILDING = marketplace }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = marketplace }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_workshop = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = workshop NOT = { can_build = counting_house }
				is_expanding_infrastructure = { BUILDING = workshop }
			}
		}
		allow = {
			any_owned_province = {
				can_build = workshop NOT = { can_build = counting_house }
				is_expanding_infrastructure = { BUILDING = workshop }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_workshop_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = workshop NOT = { can_build = counting_house }
						is_expanding_infrastructure = { BUILDING = workshop }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = workshop }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_temple = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = temple NOT = { can_build = cathedral }
				is_expanding_infrastructure = { BUILDING = temple }
			}
		}
		allow = {
			any_owned_province = {
				can_build = temple NOT = { can_build = cathedral }
				is_expanding_infrastructure = { BUILDING = temple }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_temple_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = temple NOT = { can_build = cathedral }
						is_expanding_infrastructure = { BUILDING = temple }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = temple }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_barracks = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = barracks NOT = { can_build = training_fields }
				is_expanding_infrastructure = { BUILDING = barracks }
			}
		}
		allow = {
			any_owned_province = {
				can_build = barracks NOT = { can_build = training_fields }
				is_expanding_infrastructure = { BUILDING = barracks }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_barracks_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = barracks NOT = { can_build = training_fields }
						is_expanding_infrastructure = { BUILDING = barracks }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = barracks }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_shipyard = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = shipyard NOT = { can_build = grand_shipyard }
				is_expanding_infrastructure = { BUILDING = shipyard }
			}
		}
		allow = {
			any_owned_province = {
				can_build = shipyard NOT = { can_build = grand_shipyard }
				is_expanding_infrastructure = { BUILDING = shipyard }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_shipyard_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = shipyard NOT = { can_build = grand_shipyard }
						is_expanding_infrastructure = { BUILDING = shipyard }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = shipyard }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_fort_15th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = fort_15th NOT = { can_build = fort_16th }
				is_expanding_infrastructure = { BUILDING = fort_15th }
			}
		}
		allow = {
			any_owned_province = {
				can_build = fort_15th NOT = { can_build = fort_16th }
				is_expanding_infrastructure = { BUILDING = fort_15th }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_fort_15th_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = fort_15th NOT = { can_build = fort_16th }
						is_expanding_infrastructure = { BUILDING = fort_15th }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = fort_15th }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_coastal_defence = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = coastal_defence NOT = { can_build = naval_battery }
				is_expanding_infrastructure = { BUILDING = coastal_defence }
			}
		}
		allow = {
			any_owned_province = {
				can_build = coastal_defence NOT = { can_build = naval_battery }
				is_expanding_infrastructure = { BUILDING = coastal_defence }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_coastal_defence_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = coastal_defence NOT = { can_build = naval_battery }
						is_expanding_infrastructure = { BUILDING = coastal_defence }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = coastal_defence }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_dock = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = dock NOT = { can_build = drydock }
				is_expanding_infrastructure = { BUILDING = dock }
			}
		}
		allow = {
			any_owned_province = {
				can_build = dock NOT = { can_build = drydock }
				is_expanding_infrastructure = { BUILDING = dock }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_dock_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = dock NOT = { can_build = drydock }
						is_expanding_infrastructure = { BUILDING = dock }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = dock }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_regimental_camp = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = regimental_camp NOT = { can_build = conscription_center }
				is_expanding_infrastructure = { BUILDING = regimental_camp }
			}
		}
		allow = {
			any_owned_province = {
				can_build = regimental_camp NOT = { can_build = conscription_center }
				is_expanding_infrastructure = { BUILDING = regimental_camp }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_regimental_camp_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = regimental_camp NOT = { can_build = conscription_center }
						is_expanding_infrastructure = { BUILDING = regimental_camp }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = regimental_camp }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_earthwork = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_earthwork
				is_expanding_infrastructure = { BUILDING = native_earthwork }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_earthwork
				is_expanding_infrastructure = { BUILDING = native_earthwork }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_earthwork_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_earthwork
						is_expanding_infrastructure = { BUILDING = native_earthwork }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_earthwork }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_palisade = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_palisade
				is_expanding_infrastructure = { BUILDING = native_palisade }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_palisade
				is_expanding_infrastructure = { BUILDING = native_palisade }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_palisade_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_palisade
						is_expanding_infrastructure = { BUILDING = native_palisade }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_palisade }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_fortified_house = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_fortified_house
				is_expanding_infrastructure = { BUILDING = native_fortified_house }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_fortified_house
				is_expanding_infrastructure = { BUILDING = native_fortified_house }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_fortified_house_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_fortified_house
						is_expanding_infrastructure = { BUILDING = native_fortified_house }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_fortified_house }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_ceremonial_fire_pit = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_ceremonial_fire_pit
				is_expanding_infrastructure = { BUILDING = native_ceremonial_fire_pit }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_ceremonial_fire_pit
				is_expanding_infrastructure = { BUILDING = native_ceremonial_fire_pit }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_ceremonial_fire_pit_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_ceremonial_fire_pit
						is_expanding_infrastructure = { BUILDING = native_ceremonial_fire_pit }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_ceremonial_fire_pit }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_irrigation = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_irrigation
				is_expanding_infrastructure = { BUILDING = native_irrigation }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_irrigation
				is_expanding_infrastructure = { BUILDING = native_irrigation }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_irrigation_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_irrigation
						is_expanding_infrastructure = { BUILDING = native_irrigation }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_irrigation }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_storehouse = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_storehouse
				is_expanding_infrastructure = { BUILDING = native_storehouse }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_storehouse
				is_expanding_infrastructure = { BUILDING = native_storehouse }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_storehouse_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_storehouse
						is_expanding_infrastructure = { BUILDING = native_storehouse }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_storehouse }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_longhouse = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_longhouse
				is_expanding_infrastructure = { BUILDING = native_longhouse }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_longhouse
				is_expanding_infrastructure = { BUILDING = native_longhouse }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_longhouse_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_longhouse
						is_expanding_infrastructure = { BUILDING = native_longhouse }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_longhouse }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_sweat_lodge = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_sweat_lodge
				is_expanding_infrastructure = { BUILDING = native_sweat_lodge }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_sweat_lodge
				is_expanding_infrastructure = { BUILDING = native_sweat_lodge }
			}
			treasury = 200 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_sweat_lodge_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_sweat_lodge
						is_expanding_infrastructure = { BUILDING = native_sweat_lodge }
						owner = { treasury = 200 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_sweat_lodge }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_great_trail = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_great_trail
				is_expanding_infrastructure = { BUILDING = native_great_trail }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_great_trail
				is_expanding_infrastructure = { BUILDING = native_great_trail }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_great_trail_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_great_trail
						is_expanding_infrastructure = { BUILDING = native_great_trail }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_great_trail }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	upgrade_to_native_three_sisters_field = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			# This SHOULD be balanced, but for now, make it player-only
			ai = no
			any_owned_province = {
				can_build = native_three_sisters_field
				is_expanding_infrastructure = { BUILDING = native_three_sisters_field }
			}
		}
		allow = {
			any_owned_province = {
				can_build = native_three_sisters_field
				is_expanding_infrastructure = { BUILDING = native_three_sisters_field }
			}
			treasury = 100 # Note that this ignores cost modifications. You have to have the base price on hand.
		}
		effect = {
			custom_tooltip = upgrade_to_native_three_sisters_field_tt
			hidden_effect = {
				every_owned_province = {
					limit = {
						can_build = native_three_sisters_field
						is_expanding_infrastructure = { BUILDING = native_three_sisters_field }
						owner = { treasury = 100 } # Once you no longer have the base price, stop building.
					}
					add_building_construction = { building = native_three_sisters_field }
					save_event_target_as = last_built_province
				}
				# If it took you into the red...
				if = {
					limit = { NOT = { treasury = 0 } }
					# ... cancel the last one built.
					# This isn't perfect - I would much rather the number in both "allow" and "limit" were
					# affected by actual cost modifications - but at least you won't go into debt for this.
					event_target:last_built_province = { cancel_construction = yes }
				}
			}
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_marketplace = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_marketplace
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = marketplace }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_marketplace
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_workshop = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_workshop
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = workshop }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_workshop
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_temple = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_temple
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = temple }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_temple
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_barracks = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_barracks
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = barracks }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_barracks
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_shipyard = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_shipyard
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = shipyard }
			has_port = yes
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_shipyard
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_fort_15th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_fort_15th
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = fort_15th }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_fort_15th
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_coastal_defence = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_coastal_defence
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = coastal_defence }
			has_port = yes
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_coastal_defence
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_dock = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_dock
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = dock }
			has_port = yes
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_dock
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_regimental_camp = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_regimental_camp
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = regimental_camp }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_regimental_camp
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_fort_16th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_fort_16th
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = fort_16th }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_fort_16th
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_naval_battery = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_naval_battery
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = naval_battery }
			has_port = yes
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_naval_battery
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_cathedral = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_cathedral
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = cathedral }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_cathedral
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_trade_depot = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_trade_depot
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = trade_depot }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_trade_depot
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_grand_shipyard = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_grand_shipyard
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = grand_shipyard }
			has_port = yes
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_grand_shipyard
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_training_fields = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_training_fields
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = training_fields }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_training_fields
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_fort_17th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_fort_17th
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = fort_17th }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_fort_17th
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_stock_exchange = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_stock_exchange
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = stock_exchange }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_stock_exchange
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_counting_house = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_counting_house
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = counting_house }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_counting_house
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_drydock = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_drydock
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = drydock }
			has_port = yes
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_drydock
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_conscription_center = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_conscription_center
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = conscription_center }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_conscription_center
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_fort_18th = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_fort_18th
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = fort_18th }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_fort_18th
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_earthwork = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_earthwork
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_earthwork }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_earthwork
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_palisade = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_palisade
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_palisade }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_palisade
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_fortified_house = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_fortified_house
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_fortified_house }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_fortified_house
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_ceremonial_fire_pit = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_ceremonial_fire_pit
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_ceremonial_fire_pit }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_ceremonial_fire_pit
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_irrigation = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_irrigation
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_irrigation }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_irrigation
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_storehouse = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_storehouse
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_storehouse }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_storehouse
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_longhouse = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_longhouse
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_longhouse }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_longhouse
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_sweat_lodge = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_sweat_lodge
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_sweat_lodge }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_sweat_lodge
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_great_trail = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_great_trail
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_great_trail }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_great_trail
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	celebrate_native_three_sisters_field = {
		color = { 102 51 153 } # rebeccapurple
		potential = {
			ai = no
			has_country_flag = guide_infra_native_three_sisters_field
		}
		allow = {
			custom_trigger_tooltip = {
				tooltip = celebrate_allow
				always = yes
			}
		}
		provinces_to_highlight = {
			owned_by = ROOT
			NOT = { has_building = native_three_sisters_field }
			# inland, no port needed
		}
		effect = {
			custom_tooltip = celebrate_effect
			clr_country_flag = guide_infra_native_three_sisters_field
			country_event = { id = bulkupgrades.2 }
		}
		ai_will_do = {
			factor = 0
		}
	}

	guide_infra_expansion = {
		color = { 102 51 153 } # rebeccapurple
		potential = { ai = no }
		allow = { always = yes }
		effect = {
			country_event = { id = bulkupgrades.1 }
		}
	}
}
